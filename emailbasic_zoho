#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>

int current_index;
  struct USER_DATABASE
  {
   char  user_name[30];
    char password[13];
     char email_id[30];
      char name[30];
       char inbox[10][2][10];    //2-0 for from & 1-for msg
	char sent[10][2][10]; //2-0 for to & 1-for msg
	char trash_box[10][2][10];
  }user[10];
    int user_top=-1,top=-1,sent_top=-1,trash_top=-1;
    char read_password[13];

     int search_index_excist_mailid(char recipient[]);
     void compose();
     int  inbox_add(int to_index);
     void delete_msg(int index,int sent_inbox);
     void Sent();
     void Trash();
     void Inbox();
     void account();
     void read_password_hide();
     void sign_in();
     void sign_up();
     void valid_email_id();

     int search_index_exist_mailid(char recipient[])
	{
	  int i;
	   for(i=user_top;i>=0;i--)
	   {
	   if(!strcmp(recipient,user[i].email_id))
	     return 1;
		     }
		     return 0;

	}

 void compose()
 {
 char recipient[30];
    printf("To:\t");
    scanf("%s",recipient);
    current_index=search_index_exist_mailid(recipient);
   // printf("%d current index",current_index);
     if(current_index>=0)
    {
    printf("current index:%d",current_index);

     if(inbox_add(current_index)==1)
     {
       printf("successfully sent.\n");
       strcpy(user[current_index].sent[++sent_top][0],recipient);
      }
    }
 }
int  inbox_add(int to_index)
{
  char temp[10];
  int send_choice;
  printf("message content:\n");
   scanf("%s",temp);

      printf("click 9 send\t:");
	scanf("%d",&send_choice);
	  if(send_choice==9)
	    {
	    strcpy(user[to_index].inbox[++top][1],temp);
	    strcpy(user[current_index].sent[sent_top][1],temp);
	    printf("\ncheck copied.");
	    return 1;
	    }
	    else
	    return 0;

}
void delete_msg(int index,int sent_box_or_inbox)
{
  if(sent_box_or_inbox==0)
   {
   strcpy(user[current_index].trash_box[++trash_top][0],user[current_index].inbox[index][0]);
     strcpy(user[current_index].trash_box[trash_top][1],user[current_index].inbox[index][1]);
   }
}
void Sent()
{
  int i=0;
  for(i=sent_top;i>=0;i--)
  {
     printf("mail_id: %s\n",user[current_index].sent[i][0]);
     printf("message\t:%s\n",user[current_index].sent[i][1]);
 }
}

void Trash()
{
  int i=0;
  for(i=trash_top;i>=0;i--)
  {
     printf("mail_id: %s\n",user[current_index].trash_box[i][0]);
     printf("message\t:%s\n",user[current_index].trash_box[i][1]);
 }
}


void Inbox()
{
int i;  //for iteration;
int delt;
  for(i=top;i>0;i--)
  {
    printf("from %s\n",user[current_index].inbox[i][0]);
     printf("message\t:%s\n",user[current_index].inbox[i][1]);
      printf("press 5  for delete\n");
	scanf("%d",&delt);
	if(delt==5)
	 delete_msg(i,0);     //0 for msg delete from inbox,1-for sent mail
  }

}

  void account()
   {
    int read_choice;
    while(1)
    {
    printf("select 1.compose  2.Inbox 3.Trash 4.sent 6.log_out :\n");
     scanf("%d",&read_choice);
       switch(read_choice)
       {
	  case 1:
	      printf("compose\n");
	      compose();
	      break;
	  case 2:
	     printf("Inbox\n");
	     Inbox();
	     break;
	 case 3:
	    printf("Trash\n");
	    Trash();
	    break;
	 case 4:
	    printf("Sent\n");
	    Sent();
	    break;
	default:
	    break;
     }

    if(read_choice==6)
    break;
  }

  }
  void read_password_hide()
  {     int index,i;
	char c;
	memset(read_password,30,0);
	while( (c=getch())!=13)
	 {
	read_password[i] = c;
			  printf("*");
			i++;
		     }
       read_password[i]='\0';

  }
void sign_in()
{
	char read_email_id[30];
	printf("enter email_id here\n");
	scanf("%s",read_email_id);
	       current_index=search_index_exist_mailid(read_email_id);
		printf("enter password");
		      read_password_hide();
		     if(strcmp(read_password,user[current_index].password))
			     {
			       printf("entered email id or password may wrong");
			     }
		    else
			    {
				printf("\nlogging you in\n");
				 account();
			    }
  }

 void sign_up()
   {
     char *temp_copy;
     int create; //copying password;
     struct USER_DATABASE temp;
     printf("enter name:");
     scanf("%s",temp.name);
     printf("\nenter username:");
     scanf("%s",temp.user_name);
     if(search_index_exist_mailid(temp.user_name))
	  {
	  printf("\n user name already exist");
	  sign_up();
		  }

       else
       {
	   printf("\n enter password \n note:should have 8-13 character \n and should have atleast 1 special character like #");
	    read_password_hide();

	      temp_copy=read_password;
	      printf("\nrenter to confirm password");
	    while(1)
	     {
		 read_password_hide();
	      if(strcmp(temp_copy,read_password))
	       printf("\npassword doesn't match re_enter to confirm the password");
		 else
		 {
		    strcpy(temp.password,temp_copy);
		     break;
		 }
	  }
	 printf("\nenter 7 to confirm for creating your account and you've accepted our terms and conditions");
	  scanf("%d",&create);
	  if(create==7)
	  {
	    user[++user_top]=temp;
	    sign_in();
	  }
}
 }
 void main()
 {

 char user_in;
  clrscr();

  do{
	printf("enter '+' for signup\n '@' for signin");
	   scanf("%c",&user_in);

	switch(user_in)
       {
     case '+':
	 sign_up();
	 break;
     case '@':
	sign_in();
	 break;
	 }
	 printf("\nenter c to close this application");
	 scanf("%c",&user_in);
	 }while(user_in!= 'c');
    getch();
 }
